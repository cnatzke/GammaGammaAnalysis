#ifndef GAMMAGAMMAANALYSIS_H
#define GAMMAGAMMAANALYSIS_H

#include "TGriffin.h"
#include "TGriffinBgo.h"
#include "TVector3.h"
#include <vector>

// configured options for GammaGamma
#define GammaGammaAnalysis_VERSION_MAJOR @GammaGammaAnalysis_VERSION_MAJOR@
#define GammaGammaAnalysis_VERSION_MINOR @GammaGammaAnalysis_VERSION_MINOR@

int ProcessData();
TFile* CreateOutputFile(int runNumber);
void DisplayLoadingMessage();
int GetAngleIndex(double angle, std::vector<double> vec);
int GetClosest(int val1, int val2, std::vector<double> vec, double target);
void OpenRootFile(std::string fileName);
void AutoFileDetect(std::string fileName);
void PrintUsage(char* argv[]);

TGriffin *fGrif = NULL;
TGriffinBgo *fGriffinBgo = NULL;

std::vector<double> fAngleCombinations = {15.442, 21.9054, 29.1432, 33.1433, 38.382, 44.57, 47.4453, 48.7411, 51.4734, 55.1704, 59.9782, 60.1024, 62.3396, 62.4924, 63.4231, 68.9567, 71.4314, 73.3582, 73.6291, 75.7736, 80.9423, 81.5464, 83.8936, 86.868, 88.9658, 91.0342, 93.132, 96.1064, 98.4536, 99.0577, 104.226, 106.371, 106.642, 108.569, 111.043, 116.577, 117.508, 117.66, 119.898, 120.022, 124.83, 128.527, 131.259, 132.555, 135.43, 141.618, 146.857, 150.857, 158.095, 164.558, 180.0};

float energyTmp = 0;
std::vector<float> suppr_en; // vector which contains the energy values
std::vector<long> gamma_time; // vector which contains the time values
std::vector<TVector3> pos; // vector which contains the position values

int det; //GRIFFIN detector number

int checkMix, lgsize, event_mixing_depth = 11;
std::vector<std::vector<float>> lastgrifEnergy; // should I write lastgrifEnergy(event_mixing_depth)???
std::vector<std::vector<TVector3>> lastgrifPosition; // should I write lastgrifEnergy(event_mixing_depth)???
#endif
